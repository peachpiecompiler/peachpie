//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pchp.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ErrResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Pchp.Core.Resources.ErrResources", typeof(ErrResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abstract method {0}::{1}() cannot contain body.
        /// </summary>
        public static string abstract_bodyful_method {
            get {
                return ResourceManager.GetString("abstract_bodyful_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot instantiate abstract class &apos;{0}&apos;.
        /// </summary>
        public static string abstract_class_instantiated {
            get {
                return ResourceManager.GetString("abstract_class_instantiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instantiation of abstract class or interface &apos;{0}&apos;.
        /// </summary>
        public static string abstract_class_or_interface_instantiated {
            get {
                return ResourceManager.GetString("abstract_class_or_interface_instantiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abstract method cannot be declared final.
        /// </summary>
        public static string abstract_final_method_declared {
            get {
                return ResourceManager.GetString("abstract_final_method_declared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot call abstract method {0}::{1}().
        /// </summary>
        public static string abstract_method_called {
            get {
                return ResourceManager.GetString("abstract_method_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; doesn&apos;t implement abstract method {1}::{2}().
        /// </summary>
        public static string abstract_method_not_implemented {
            get {
                return ResourceManager.GetString("abstract_method_not_implemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abstract method cannot be declared private.
        /// </summary>
        public static string abstract_private_method_declared {
            get {
                return ResourceManager.GetString("abstract_private_method_declared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; doesn&apos;t implement abstract property {1}::${2}.
        /// </summary>
        public static string abstract_property_not_implemented {
            get {
                return ResourceManager.GetString("abstract_property_not_implemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;&amp;&apos; modifier ignored in the function call, use &apos;&amp;&apos; modifier in function declaration to pass the argument by reference.
        /// </summary>
        public static string act_param_with_ampersand {
            get {
                return ResourceManager.GetString("act_param_with_ampersand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use {0} as {1} because the name is already in use.
        /// </summary>
        public static string alias_in_use {
            get {
                return ResourceManager.GetString("alias_in_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous constant name: &apos;{1}&apos; and &apos;{2}&apos; are both imported as &apos;{0}&apos;.
        /// </summary>
        public static string ambiguous_constant_match {
            get {
                return ResourceManager.GetString("ambiguous_constant_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous file access mode (binary mode assumed). Specify either &apos;{0}b&apos; or &apos;{0}t&apos; or set configuration option DefaultFileOpenMode..
        /// </summary>
        public static string ambiguous_file_mode {
            get {
                return ResourceManager.GetString("ambiguous_file_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous function name: &apos;{1}&apos; and &apos;{2}&apos; are both imported as &apos;{0}&apos;.
        /// </summary>
        public static string ambiguous_function_match {
            get {
                return ResourceManager.GetString("ambiguous_function_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous name: &apos;{1}&apos; and &apos;{2}&apos; are both imported as &apos;{0}&apos;.
        /// </summary>
        public static string ambiguous_name_match {
            get {
                return ResourceManager.GetString("ambiguous_name_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous type name: &apos;{1}&apos; and &apos;{2}&apos; are both imported as &apos;{0}&apos;.
        /// </summary>
        public static string ambiguous_type_match {
            get {
                return ResourceManager.GetString("ambiguous_type_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application configuration file copied..
        /// </summary>
        public static string application_config_file_copied {
            get {
                return ResourceManager.GetString("application_config_file_copied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argless stub for populated method &apos;{0}&apos; not found..
        /// </summary>
        public static string argless_stub_not_found {
            get {
                return ResourceManager.GetString("argless_stub_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function &apos;{0}&apos;() is ArgsAware. It requires to be called via ArgLess stub, but was called via ArgFull. It requires arguments to be loaded on PhpStack..
        /// </summary>
        public static string argsaware_routine_needs_args {
            get {
                return ResourceManager.GetString("argsaware_routine_needs_args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} cannot be equal to {1}..
        /// </summary>
        public static string argument_equals {
            get {
                return ResourceManager.GetString("argument_equals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Environment variable name cannot contain equal character..
        /// </summary>
        public static string Argument_IllegalEnvVarName {
            get {
                return ResourceManager.GetString("Argument_IllegalEnvVarName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Environment variable name or value is too long..
        /// </summary>
        public static string Argument_LongEnvVarValue {
            get {
                return ResourceManager.GetString("Argument_LongEnvVarValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be callable, {1} given.
        /// </summary>
        public static string argument_not_callable {
            get {
                return ResourceManager.GetString("argument_not_callable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument #{0} should be passed by reference.
        /// </summary>
        public static string argument_not_passed_byref {
            get {
                return ResourceManager.GetString("argument_not_passed_byref", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument #{0} should be passed to {1}() by reference.
        /// </summary>
        public static string argument_not_passed_byref_to {
            get {
                return ResourceManager.GetString("argument_not_passed_byref_to", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument #{0} not passed to the function/method.
        /// </summary>
        public static string argument_not_passed_to_function {
            get {
                return ResourceManager.GetString("argument_not_passed_to_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; should not be NULL.
        /// </summary>
        public static string argument_null {
            get {
                return ResourceManager.GetString("argument_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first char in the string is the null character..
        /// </summary>
        public static string Argument_StringFirstCharIsZero {
            get {
                return ResourceManager.GetString("Argument_StringFirstCharIsZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String cannot be of zero length..
        /// </summary>
        public static string Argument_StringZeroLength {
            get {
                return ResourceManager.GetString("Argument_StringZeroLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value &apos;{0}&apos; of argument &apos;{1}&apos; is not supported.
        /// </summary>
        public static string argument_value_not_supported {
            get {
                return ResourceManager.GetString("argument_value_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments.
        /// </summary>
        public static string Arguments {
            get {
                return ResourceManager.GetString("Arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arrays are not allowed in class constants.
        /// </summary>
        public static string array_in_cls_const {
            get {
                return ResourceManager.GetString("array_in_cls_const", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array to string conversion.
        /// </summary>
        public static string array_to_string_conversion {
            get {
                return ResourceManager.GetString("array_to_string_conversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An array used as an object.
        /// </summary>
        public static string array_used_as_object {
            get {
                return ResourceManager.GetString("array_used_as_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script &apos;{0}&apos; inclusion failed. Script not found in the application&apos;s script libraries.
        /// </summary>
        public static string assembly_script_inclusion_failed {
            get {
                return ResourceManager.GetString("assembly_script_inclusion_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assertion &apos;{0}&apos; failed.
        /// </summary>
        public static string assertion_failed {
            get {
                return ResourceManager.GetString("assertion_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assigning the return value of new by reference is deprecated.
        /// </summary>
        public static string assign_new_as_ref_is_deprecated {
            get {
                return ResourceManager.GetString("assign_new_as_ref_is_deprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library function &apos;{0}&apos; called with wrong number of parameters.
        /// </summary>
        public static string bad_system_fcn_params_count {
            get {
                return ResourceManager.GetString("bad_system_fcn_params_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiling {0} ....
        /// </summary>
        public static string begin_compile {
            get {
                return ResourceManager.GetString("begin_compile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffering level couldn&apos;t be decresed below zero.
        /// </summary>
        public static string buffering_level_decreased_under_zero {
            get {
                return ResourceManager.GetString("buffering_level_decreased_under_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffers must not be empty..
        /// </summary>
        public static string buffers_must_not_be_empty {
            get {
                return ResourceManager.GetString("buffers_must_not_be_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The magic method __callStatic() must have public visibility and be static.
        /// </summary>
        public static string callstat_must_be_public_static {
            get {
                return ResourceManager.GetString("callstat_must_be_public_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not change the section of loaded library. The library &apos;{0}&apos; has already been bound to configuration section &apos;{1}&apos;..
        /// </summary>
        public static string cannot_change_library_section {
            get {
                return ResourceManager.GetString("cannot_change_library_section", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing the target instance is unsupported if the callback is already bound..
        /// </summary>
        public static string cannot_change_target_instance {
            get {
                return ResourceManager.GetString("cannot_change_target_instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create closure from callable.
        /// </summary>
        public static string cannot_create_closure_from_callable {
            get {
                return ResourceManager.GetString("cannot_create_closure_from_callable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create configuration file &apos;{0}&apos;. Error: {1}.
        /// </summary>
        public static string cannot_create_config_file {
            get {
                return ResourceManager.GetString("cannot_create_config_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot derive from &apos;{0}&apos; because it is a generic type parameter.
        /// </summary>
        public static string cannot_derive_from_type_parameter {
            get {
                return ResourceManager.GetString("cannot_derive_from_type_parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration option cannot be modified here since it has been prevented to so by &apos;allowOverride&apos; attribute in configuration file &apos;{0}&apos;..
        /// </summary>
        public static string cannot_modify_option {
            get {
                return ResourceManager.GetString("cannot_modify_option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot re-assign $this.
        /// </summary>
        public static string cannot_reassign_this {
            get {
                return ResourceManager.GetString("cannot_reassign_this", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot unset string offsets.
        /// </summary>
        public static string cannot_unset_string_offsets {
            get {
                return ResourceManager.GetString("cannot_unset_string_offsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name &apos;{0}&apos; is reserved and cannot be used here.
        /// </summary>
        public static string cannot_use_reserved_name {
            get {
                return ResourceManager.GetString("cannot_use_reserved_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t clone system classes table..
        /// </summary>
        public static string cant_clone_sys_table {
            get {
                return ResourceManager.GetString("cant_clone_sys_table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create types for system classes..
        /// </summary>
        public static string cant_create_sys_class_types {
            get {
                return ResourceManager.GetString("cant_create_sys_class_types", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t generate builders for system classes..
        /// </summary>
        public static string cant_generate_sys_class_builders {
            get {
                return ResourceManager.GetString("cant_generate_sys_class_builders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream does not support casting as System.IO.Stream..
        /// </summary>
        public static string casting_to_stream_unsupported {
            get {
                return ResourceManager.GetString("casting_to_stream_unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t use function/method return value in write context.
        /// </summary>
        public static string check_varuse_fault {
            get {
                return ResourceManager.GetString("check_varuse_fault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular class inheritance dependency involving &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        public static string circular_base_class_dependency {
            get {
                return ResourceManager.GetString("circular_base_class_dependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular interface inheritance dependency involving &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        public static string circular_base_interface_dependency {
            get {
                return ResourceManager.GetString("circular_base_interface_dependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular constant definition involving class constant &apos;{0}::{1}&apos;.
        /// </summary>
        public static string circular_constant_definition_class {
            get {
                return ResourceManager.GetString("circular_constant_definition_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular constant definition involving global constant &apos;{0}&apos;.
        /// </summary>
        public static string circular_constant_definition_global {
            get {
                return ResourceManager.GetString("circular_constant_definition_global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of the class &apos;{0}&apos; in PHP code is not recommended as the resulting effect will probably be different than expected.
        /// </summary>
        public static string class_behavior_may_be_unexpected {
            get {
                return ResourceManager.GetString("class_behavior_may_be_unexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class {0} could not be loaded.
        /// </summary>
        public static string class_could_not_be_loaded {
            get {
                return ResourceManager.GetString("class_could_not_be_loaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class &apos;{0}&apos; has no parent.
        /// </summary>
        public static string class_has_no_parent {
            get {
                return ResourceManager.GetString("class_has_no_parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class {0} has no unserializer.
        /// </summary>
        public static string class_has_no_unserializer {
            get {
                return ResourceManager.GetString("class_has_no_unserializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; has no visible constructor.
        /// </summary>
        public static string class_has_no_visible_ctor {
            get {
                return ResourceManager.GetString("class_has_no_visible_ctor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot declare class {0} because the name is already in use.
        /// </summary>
        public static string class_in_use {
            get {
                return ResourceManager.GetString("class_in_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to instantiate class &apos;{0}&apos;..
        /// </summary>
        public static string class_instantiation_failed {
            get {
                return ResourceManager.GetString("class_instantiation_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; not found.
        /// </summary>
        public static string class_not_found {
            get {
                return ResourceManager.GetString("class_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A class or an interface &apos;{0}&apos; is redeclared in the assembly scope.
        /// </summary>
        public static string class_redeclared_in_assembly {
            get {
                return ResourceManager.GetString("class_redeclared_in_assembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare class/interface {0}.
        /// </summary>
        public static string class_redeclared_runtime {
            get {
                return ResourceManager.GetString("class_redeclared_runtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inclusion redeclares class/interface {0}.
        /// </summary>
        public static string class_redeclared_runtime_include {
            get {
                return ResourceManager.GetString("class_redeclared_runtime_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __clone method called on non-object.
        /// </summary>
        public static string clone_called_on_non_object {
            get {
                return ResourceManager.GetString("clone_called_on_non_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clone method {0}::__clone() cannot be static.
        /// </summary>
        public static string clone_cannot_be_static {
            get {
                return ResourceManager.GetString("clone_cannot_be_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clone method {0}::__clone() cannot accept any arguments.
        /// </summary>
        public static string clone_cannot_take_arguments {
            get {
                return ResourceManager.GetString("clone_cannot_take_arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured during assembly generation: {0}.
        /// </summary>
        public static string code_generation_error {
            get {
                return ResourceManager.GetString("code_generation_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration of {0} {1} will issue a run-time error if executed since the {0} will already be declared here.
        /// </summary>
        public static string conditionally_redeclared {
            get {
                return ResourceManager.GetString("conditionally_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inclusion will issue a run-time error if executed - a redeclaration of {0} {1}.
        /// </summary>
        public static string conditionally_redeclared_by_inclusion {
            get {
                return ResourceManager.GetString("conditionally_redeclared_by_inclusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration error: {0}.
        /// </summary>
        public static string configuration_error {
            get {
                return ResourceManager.GetString("configuration_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file &apos;{0}&apos; not found..
        /// </summary>
        public static string configuration_file_not_found {
            get {
                return ResourceManager.GetString("configuration_file_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration has not been loaded yet..
        /// </summary>
        public static string configuration_not_loaded {
            get {
                return ResourceManager.GetString("configuration_not_loaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration record is read only..
        /// </summary>
        public static string configuration_record_read_only {
            get {
                return ResourceManager.GetString("configuration_record_read_only", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant &apos;{0}&apos; has already been imported.
        /// </summary>
        public static string conflicting_constant_aliases {
            get {
                return ResourceManager.GetString("conflicting_constant_aliases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function &apos;{0}&apos; has already been imported.
        /// </summary>
        public static string conflicting_function_aliases {
            get {
                return ResourceManager.GetString("conflicting_function_aliases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All partial declarations of &apos;{0}&apos; must have the same visibility.
        /// </summary>
        public static string conflicting_partial_visibility {
            get {
                return ResourceManager.GetString("conflicting_partial_visibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; has already been imported.
        /// </summary>
        public static string conflicting_type_aliases {
            get {
                return ResourceManager.GetString("conflicting_type_aliases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option is valid only in console application configuration..
        /// </summary>
        public static string console_only_option {
            get {
                return ResourceManager.GetString("console_only_option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find constant {0}.
        /// </summary>
        public static string constant_not_found {
            get {
                return ResourceManager.GetString("constant_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare constant &apos;{0}&apos;.
        /// </summary>
        public static string constant_redeclared {
            get {
                return ResourceManager.GetString("constant_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to redefine constant &apos;{0}&apos;.
        /// </summary>
        public static string constant_redefined {
            get {
                return ResourceManager.GetString("constant_redefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Constant &apos;{2}&apos; is reimplemented. Previously implemented by {3}.{4}..
        /// </summary>
        public static string constant_reimplemented {
            get {
                return ResourceManager.GetString("constant_reimplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define value which is neither scalar nor NULL as a constant.
        /// </summary>
        public static string constant_value_neither_scalar_nor_null {
            get {
                return ResourceManager.GetString("constant_value_neither_scalar_nor_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor {0}::{1}() cannot be static.
        /// </summary>
        public static string construct_cannot_be_static {
            get {
                return ResourceManager.GetString("construct_cannot_be_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; construct is not supported.
        /// </summary>
        public static string construct_not_supported {
            get {
                return ResourceManager.GetString("construct_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor {0}::{1}() cannot be static.
        /// </summary>
        public static string constructor_cannot_be_static {
            get {
                return ResourceManager.GetString("constructor_cannot_be_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot instantiate class &apos;{0}&apos; because it has no visible constructor.
        /// </summary>
        public static string constructor_less_type_instantiated {
            get {
                return ResourceManager.GetString("constructor_less_type_instantiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied resource is not a valid Stream-Context resource.
        /// </summary>
        public static string context_expected {
            get {
                return ResourceManager.GetString("context_expected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create event..
        /// </summary>
        public static string could_not_create_event {
            get {
                return ResourceManager.GetString("could_not_create_event", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load extension: .
        /// </summary>
        public static string could_not_load_extension {
            get {
                return ResourceManager.GetString("could_not_load_extension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cyclic inclusion between files &apos;{0}&apos; and &apos;{1}&apos; detected, inclusion of file &apos;{0}&apos; deferred to runtime.
        /// </summary>
        public static string cyclic_inclusion {
            get {
                return ResourceManager.GetString("cyclic_inclusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration of {0}::{1}() should be compatible with that of {2}::{3}().
        /// </summary>
        public static string declaration_should_be_compatible {
            get {
                return ResourceManager.GetString("declaration_should_be_compatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown exception.
        /// </summary>
        public static string default_exception_message {
            get {
                return ResourceManager.GetString("default_exception_message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating default object from empty value.
        /// </summary>
        public static string default_object_created {
            get {
                return ResourceManager.GetString("default_object_created", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method is no longer supported. Use TypeBuilder.DefineMethod instead..
        /// </summary>
        public static string define_method_unsupported {
            get {
                return ResourceManager.GetString("define_method_unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to it defines application wide configuration.
        /// </summary>
        public static string defines_app_wide_config {
            get {
                return ResourceManager.GetString("defines_app_wide_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to it defines machine wide configuration.
        /// </summary>
        public static string defines_machine_wide_config {
            get {
                return ResourceManager.GetString("defines_machine_wide_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object instance must be given for non-static method &apos;{1}::{2}&apos; when creating delegate &apos;{0}&apos;. Use array($instance, &quot;{2}&quot;).
        /// </summary>
        public static string delegate_target_instance_missing {
            get {
                return ResourceManager.GetString("delegate_target_instance_missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized constructor arguments were given to delegate &apos;{0}&apos;. Use &quot;function&quot;, array($instance, &quot;method&quot;), or array(&quot;class&quot;, &quot;method&quot;).
        /// </summary>
        public static string delegate_unrecognized_ctor_args {
            get {
                return ResourceManager.GetString("delegate_unrecognized_ctor_args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destructor {0}::__destruct() cannot be static.
        /// </summary>
        public static string destruct_cannot_be_static {
            get {
                return ResourceManager.GetString("destruct_cannot_be_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destructor {0}::__destruct() cannot take arguments.
        /// </summary>
        public static string destruct_cannot_take_arguments {
            get {
                return ResourceManager.GetString("destruct_cannot_take_arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destructor {0}::{1}() cannot be static.
        /// </summary>
        public static string destructor_cannot_be_static {
            get {
                return ResourceManager.GetString("destructor_cannot_be_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory &apos;{0}&apos; does not exist..
        /// </summary>
        public static string directory_not_exists {
            get {
                return ResourceManager.GetString("directory_not_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory &apos;{0}&apos; not found..
        /// </summary>
        public static string directory_not_found {
            get {
                return ResourceManager.GetString("directory_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Division by zero.
        /// </summary>
        public static string division_by_zero {
            get {
                return ResourceManager.GetString("division_by_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body of function decorated with the DllImportAttribute is ignored. System provides this body..
        /// </summary>
        public static string dll_import_body_ignored {
            get {
                return ResourceManager.GetString("dll_import_body_ignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method decorated with DllImportAttribute cannot be abstract..
        /// </summary>
        public static string dll_import_cannot_be_abstract {
            get {
                return ResourceManager.GetString("dll_import_cannot_be_abstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function decorated with DllImportAttribute must be static..
        /// </summary>
        public static string dll_import_must_be_static {
            get {
                return ResourceManager.GetString("dll_import_must_be_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No &apos;..&apos; components allowed in path.
        /// </summary>
        public static string dotdot_not_allowed_in_path {
            get {
                return ResourceManager.GetString("dotdot_not_allowed_in_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate attribute &apos;{0}&apos;.
        /// </summary>
        public static string duplicate_attribute_usage {
            get {
                return ResourceManager.GetString("duplicate_attribute_usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate generic type parameter.
        /// </summary>
        public static string duplicate_generic_parameter {
            get {
                return ResourceManager.GetString("duplicate_generic_parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate parameter name &apos;{0}&apos;.
        /// </summary>
        public static string duplicate_parameter_name {
            get {
                return ResourceManager.GetString("duplicate_parameter_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamic wrapper &apos;{0}&apos; could not be loaded..
        /// </summary>
        public static string dynamic_wrapper_loading_failed {
            get {
                return ResourceManager.GetString("dynamic_wrapper_loading_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied file access mode is empty.
        /// </summary>
        public static string empty_file_mode {
            get {
                return ResourceManager.GetString("empty_file_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use [] for reading.
        /// </summary>
        public static string empty_index_in_read_context {
            get {
                return ResourceManager.GetString("empty_index_in_read_context", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path must not be empty..
        /// </summary>
        public static string empty_path {
            get {
                return ResourceManager.GetString("empty_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An empty variable used as an array.
        /// </summary>
        public static string empty_used_as_array {
            get {
                return ResourceManager.GetString("empty_used_as_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An empty variable used as an object.
        /// </summary>
        public static string empty_used_as_object {
            get {
                return ResourceManager.GetString("empty_used_as_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} compiled successfully.
        /// </summary>
        public static string end_compile {
            get {
                return ResourceManager.GetString("end_compile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry point has already been defined.
        /// </summary>
        public static string entry_point_redefined {
            get {
                return ResourceManager.GetString("entry_point_redefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry point script not specified..
        /// </summary>
        public static string entrypoint_not_specified {
            get {
                return ResourceManager.GetString("entrypoint_not_specified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified enumerator doesn&apos;t reference this table..
        /// </summary>
        public static string enumerator_not_referencing_this_table {
            get {
                return ResourceManager.GetString("enumerator_not_referencing_this_table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error creating file &apos;{0}&apos;: {1}.
        /// </summary>
        public static string error_creating_file {
            get {
                return ResourceManager.GetString("error_creating_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;br/&gt;
        ///&lt;b&gt;{0}&lt;/b&gt;: {1}{2}.&lt;br/&gt;
        ///.
        /// </summary>
        public static string error_message_html {
            get {
                return ResourceManager.GetString("error_message_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;br/&gt;
        ///&lt;b&gt;{0}&lt;/b&gt;: {1}{2} in &lt;b&gt;{3}&lt;/b&gt; on line &lt;b&gt;{4}&lt;/b&gt;, column &lt;b&gt;{5}&lt;/b&gt;.&lt;br/&gt;
        ///.
        /// </summary>
        public static string error_message_html_debug {
            get {
                return ResourceManager.GetString("error_message_html_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} inside {1}.
        /// </summary>
        public static string error_message_html_eval {
            get {
                return ResourceManager.GetString("error_message_html_eval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to inside {0} (on line &lt;b&gt;{1}&lt;/b&gt;, column &lt;b&gt;{2}&lt;/b&gt;).
        /// </summary>
        public static string error_message_html_eval_debug {
            get {
                return ResourceManager.GetString("error_message_html_eval_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///{0}: {1}{2}.
        ///.
        /// </summary>
        public static string error_message_plain {
            get {
                return ResourceManager.GetString("error_message_plain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///{0}: {1}{2} in {3} on line {4}, column {5}.
        ///.
        /// </summary>
        public static string error_message_plain_debug {
            get {
                return ResourceManager.GetString("error_message_plain_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} inside {1}.
        /// </summary>
        public static string error_message_plain_eval {
            get {
                return ResourceManager.GetString("error_message_plain_eval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to inside {0} (on line {1}, column {2}).
        /// </summary>
        public static string error_message_plain_eval_debug {
            get {
                return ResourceManager.GetString("error_message_plain_eval_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  in {0} on line {1}, column {2}.
        /// </summary>
        public static string error_place {
            get {
                return ResourceManager.GetString("error_place", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event &apos;{0}::{1}&apos; has no Add accessor method.
        /// </summary>
        public static string event_has_no_add_accessor {
            get {
                return ResourceManager.GetString("event_has_no_add_accessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event &apos;{0}::{1}&apos; has no Remove accessor method.
        /// </summary>
        public static string event_has_no_remove_accessor {
            get {
                return ResourceManager.GetString("event_has_no_remove_accessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write to event {0}::${1}, use {0}::${1}-&gt;Add() and {0}::${1}-&gt;Remove() to add or remove an event handler.
        /// </summary>
        public static string event_written {
            get {
                return ResourceManager.GetString("event_written", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception cannot be thrown here: {0}.
        /// </summary>
        public static string exception_cannot_be_thrown {
            get {
                return ResourceManager.GetString("exception_cannot_be_thrown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum execution time of {0} seconds exceeded.
        /// </summary>
        public static string execution_timed_out {
            get {
                return ResourceManager.GetString("execution_timed_out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting parent constructor call.
        /// </summary>
        public static string expecting_parent_ctor_invocation {
            get {
                return ResourceManager.GetString("expecting_parent_ctor_invocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;Export&apos; can be used only in pure unit.
        /// </summary>
        public static string export_attribute_in_non_pure {
            get {
                return ResourceManager.GetString("export_attribute_in_non_pure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension &apos;{0}&apos; (file &apos;{1}&apos;) has alredy been loaded..
        /// </summary>
        public static string extension_already_loaded {
            get {
                return ResourceManager.GetString("extension_already_loaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while loading library (extension) classes: .
        /// </summary>
        public static string extension_loading_error {
            get {
                return ResourceManager.GetString("extension_loading_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Native PHP extensions are not installed or properly configured.
        /// </summary>
        public static string extensions_not_installed {
            get {
                return ResourceManager.GetString("extensions_not_installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to undefined external function &apos;{0}&apos;, extension &apos;{1}&apos; - native PHP extensions are not installed or properly configured.
        /// </summary>
        public static string extensions_not_installed_in_invoke {
            get {
                return ResourceManager.GetString("extensions_not_installed_in_invoke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one extension is to be run in isolated mode but ExtManager path is not configured..
        /// </summary>
        public static string extmanager_path_not_configured {
            get {
                return ResourceManager.GetString("extmanager_path_not_configured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field with the same name already exists in this object..
        /// </summary>
        public static string field_already_exists {
            get {
                return ResourceManager.GetString("field_already_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reflected field &apos;{0}&apos; has unknown implementor. PhpPublicFieldAttribute incorrect usage..
        /// </summary>
        public static string field_implementor_not_found {
            get {
                return ResourceManager.GetString("field_implementor_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces cannot have properties.
        /// </summary>
        public static string field_in_interface {
            get {
                return ResourceManager.GetString("field_in_interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist..
        /// </summary>
        public static string file_not_exists {
            get {
                return ResourceManager.GetString("file_not_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot inherit from final class &apos;{0}&apos;.
        /// </summary>
        public static string final_class_extended {
            get {
                return ResourceManager.GetString("final_class_extended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: First parameter should be of type IDictionary due to NeedsVariables option..
        /// </summary>
        public static string first_param_not_dictionary {
            get {
                return ResourceManager.GetString("first_param_not_dictionary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is intended for internal usage only..
        /// </summary>
        public static string for_internal_usage_only {
            get {
                return ResourceManager.GetString("for_internal_usage_only", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The function already has parametr {0}.
        /// </summary>
        public static string formal_param_redeclaration {
            get {
                return ResourceManager.GetString("formal_param_redeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function {0}() is deprecated.
        /// </summary>
        public static string function_is_deprecated {
            get {
                return ResourceManager.GetString("function_is_deprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function needs a table of defined variables.
        /// </summary>
        public static string function_needs_variables {
            get {
                return ResourceManager.GetString("function_needs_variables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function is not supported.
        /// </summary>
        public static string function_not_supported {
            get {
                return ResourceManager.GetString("function_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare function &apos;{0}&apos;.
        /// </summary>
        public static string function_redeclared {
            get {
                return ResourceManager.GetString("function_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Function &apos;{2}&apos; is reimplemented. Previously implemented by {3}.{4}..
        /// </summary>
        public static string function_reimplemented {
            get {
                return ResourceManager.GetString("function_reimplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating assembly ....
        /// </summary>
        public static string generating_assembly {
            get {
                return ResourceManager.GetString("generating_assembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use generic arguments when calling a library function.
        /// </summary>
        public static string generic_call_to_library_function {
            get {
                return ResourceManager.GetString("generic_call_to_library_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot declare generic type parameter {0} because the name is already in use.
        /// </summary>
        public static string generic_in_use {
            get {
                return ResourceManager.GetString("generic_in_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic type parameter &apos;{0}&apos; has the same name as the containing class/interface.
        /// </summary>
        public static string generic_parameter_collides_with_declarer {
            get {
                return ResourceManager.GetString("generic_parameter_collides_with_declarer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic type parameter must be an identifier different from &apos;self&apos; and &apos;parent&apos; in this context.
        /// </summary>
        public static string generic_parameter_is_reserved_identifier {
            get {
                return ResourceManager.GetString("generic_parameter_is_reserved_identifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic parameter must refer to a type in this context.
        /// </summary>
        public static string generic_parameter_must_be_type {
            get {
                return ResourceManager.GetString("generic_parameter_must_be_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic parameters cannot be defined on constructor.
        /// </summary>
        public static string generic_parameters_disallowed_on_ctor {
            get {
                return ResourceManager.GetString("generic_parameters_disallowed_on_ctor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Objects returned by {0}::getIterator() must be traversable or implement interface Iterator.
        /// </summary>
        public static string getiterator_must_return_traversable {
            get {
                return ResourceManager.GetString("getiterator_must_return_traversable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global code is not allowed in the pure unit..
        /// </summary>
        public static string global_code_in_pure_unit {
            get {
                return ResourceManager.GetString("global_code_in_pure_unit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal type returned from {0}::key().
        /// </summary>
        public static string illegal_key_return_type {
            get {
                return ResourceManager.GetString("illegal_key_return_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal offset type.
        /// </summary>
        public static string illegal_offset_type {
            get {
                return ResourceManager.GetString("illegal_offset_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal string offset &apos;{0}&apos;.
        /// </summary>
        public static string illegal_string_offset {
            get {
                return ResourceManager.GetString("illegal_string_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import statement is deprecated and will be removed in future versions. Use PHP aliasing instead..
        /// </summary>
        public static string import_deprecated {
            get {
                return ResourceManager.GetString("import_deprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import statement is only available in pure mode.
        /// </summary>
        public static string import_only_in_pure {
            get {
                return ResourceManager.GetString("import_only_in_pure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be of the same type as this instance..
        /// </summary>
        public static string incarnation_type_mismatch {
            get {
                return ResourceManager.GetString("incarnation_type_mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inclusion of file &apos;{0}&apos; deferred to runtime because: {1}.
        /// </summary>
        public static string inclusion_deferred_to_runtime {
            get {
                return ResourceManager.GetString("inclusion_deferred_to_runtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inclusions are not allowed in the pure unit..
        /// </summary>
        public static string inclusion_in_pure_unit {
            get {
                return ResourceManager.GetString("inclusion_in_pure_unit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No inclusion pattern does match expression &apos;{0}&apos;.
        /// </summary>
        public static string inclusion_replacement_failed {
            get {
                return ResourceManager.GetString("inclusion_replacement_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arrays which are incomparable have been compared..
        /// </summary>
        public static string incomparable_arrays_compared {
            get {
                return ResourceManager.GetString("incomparable_arrays_compared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incomparable objects have been compared.
        /// </summary>
        public static string incomparable_objects_compared {
            get {
                return ResourceManager.GetString("incomparable_objects_compared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incomparable objects ({0} and {1}) have been compared.
        /// </summary>
        public static string incomparable_objects_compared_exception {
            get {
                return ResourceManager.GetString("incomparable_objects_compared_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of &apos;{0}&apos; must be all classes or all interfaces.
        /// </summary>
        public static string incompatible_partial_declarations {
            get {
                return ResourceManager.GetString("incompatible_partial_declarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class/interface &apos;{0}&apos; is incompatible with the constraints imposed on the generic type argument #{1} (&apos;{2}&apos;) by method &apos;{3}&apos;.
        /// </summary>
        public static string incompatible_type_parameter_constraints_method {
            get {
                return ResourceManager.GetString("incompatible_type_parameter_constraints_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class/interface &apos;{0}&apos; is incompatible with the constraints imposed on the generic type argument #{1} (&apos;{2}&apos;) by type &apos;{3}&apos;.
        /// </summary>
        public static string incompatible_type_parameter_constraints_type {
            get {
                return ResourceManager.GetString("incompatible_type_parameter_constraints_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class &apos;{0}&apos; is incomplete - its base class or interface is unknown.
        /// </summary>
        public static string incomplete_class {
            get {
                return ResourceManager.GetString("incomplete_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path &apos;{0}&apos; is incomplete. The path is relative or drive specification is missing..
        /// </summary>
        public static string incomplete_path {
            get {
                return ResourceManager.GetString("incomplete_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot inherit constant {0}::{1} previously declared in interface &apos;{2}&apos;.
        /// </summary>
        public static string inheriting_previously_inherited_constant {
            get {
                return ResourceManager.GetString("inheriting_previously_inherited_constant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance has already been disposed.
        /// </summary>
        public static string instance_disposed {
            get {
                return ResourceManager.GetString("instance_disposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instantiation of &apos;{0}&apos; is not allowed.
        /// </summary>
        public static string instantiation_not_allowed {
            get {
                return ResourceManager.GetString("instantiation_not_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add item to array - integer key reached maximal possible value (2^31-1).
        /// </summary>
        public static string integer_key_reached_max_value {
            get {
                return ResourceManager.GetString("integer_key_reached_max_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface method {0}::{1}() cannot contain body.
        /// </summary>
        public static string interface_bodyful_method {
            get {
                return ResourceManager.GetString("interface_bodyful_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot instantiate interface &apos;{0}&apos;.
        /// </summary>
        public static string interface_instantiated {
            get {
                return ResourceManager.GetString("interface_instantiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access type for interface method {0}::{1}() must be omitted or declared public.
        /// </summary>
        public static string interface_method_non_public {
            get {
                return ResourceManager.GetString("interface_method_non_public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error! 
        ///Please, report this bug via {0}.
        ///Additional information: 
        ///{1}.
        /// </summary>
        public static string internal_error {
            get {
                return ResourceManager.GetString("internal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid argument &apos;{0}&apos;.
        /// </summary>
        public static string invalid_argument {
            get {
                return ResourceManager.GetString("invalid_argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid argument count.
        /// </summary>
        public static string invalid_argument_count {
            get {
                return ResourceManager.GetString("invalid_argument_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid argument count in a call to the function &apos;{0}&apos;.
        /// </summary>
        public static string invalid_argument_count_for_function {
            get {
                return ResourceManager.GetString("invalid_argument_count_for_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid argument count in a call to the method &apos;{0}::{1}&apos;.
        /// </summary>
        public static string invalid_argument_count_for_method {
            get {
                return ResourceManager.GetString("invalid_argument_count_for_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; must be of type &apos;{1}&apos;.
        /// </summary>
        public static string invalid_argument_type {
            get {
                return ResourceManager.GetString("invalid_argument_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value &apos;{1}&apos; is invalid for argument &apos;{0}&apos;.
        /// </summary>
        public static string invalid_argument_value {
            get {
                return ResourceManager.GetString("invalid_argument_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid argument: .
        /// </summary>
        public static string invalid_argument_with_message {
            get {
                return ResourceManager.GetString("invalid_argument_with_message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid array rank..
        /// </summary>
        public static string invalid_array_rank {
            get {
                return ResourceManager.GetString("invalid_array_rank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attribute argument must be a constant expression.
        /// </summary>
        public static string invalid_attribute_expression {
            get {
                return ResourceManager.GetString("invalid_attribute_expression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;{0}&apos; cannot be used in configuration file located on virtual path &apos;{0}&apos;..
        /// </summary>
        public static string invalid_attribute_location {
            get {
                return ResourceManager.GetString("invalid_attribute_location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid attribute target selector (specify one of &apos;return&apos;, &apos;assembly&apos;, &apos;module&apos;).
        /// </summary>
        public static string invalid_attribute_target_selector {
            get {
                return ResourceManager.GetString("invalid_attribute_target_selector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid use of attribute &apos;{0}&apos;.
        /// </summary>
        public static string invalid_attribute_usage {
            get {
                return ResourceManager.GetString("invalid_attribute_usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of attribute &apos;{0}&apos; is invalid..
        /// </summary>
        public static string invalid_attribute_value {
            get {
                return ResourceManager.GetString("invalid_attribute_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid base..
        /// </summary>
        public static string invalid_base {
            get {
                return ResourceManager.GetString("invalid_base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot break/continue {0} level(s).
        /// </summary>
        public static string invalid_break_level_count {
            get {
                return ResourceManager.GetString("invalid_break_level_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid call context data in slot {0}..
        /// </summary>
        public static string invalid_call_context_data {
            get {
                return ResourceManager.GetString("invalid_call_context_data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid callback.
        /// </summary>
        public static string invalid_callback {
            get {
                return ResourceManager.GetString("invalid_callback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dynamic wrapper for the library, file &apos;{0}&apos;, is invalid. Delete the wrapper file so that it could be regenerated automatically during the next request..
        /// </summary>
        public static string invalid_class_library_wrapper {
            get {
                return ResourceManager.GetString("invalid_class_library_wrapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class name must be a valid object or a string.
        /// </summary>
        public static string invalid_class_name {
            get {
                return ResourceManager.GetString("invalid_class_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value &apos;{0}&apos; doesn&apos;t encode a valid Unicode character.
        /// </summary>
        public static string invalid_code_point {
            get {
                return ResourceManager.GetString("invalid_code_point", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value &apos;{0}&apos; doesn&apos;t encode a valid Unicode character name.
        /// </summary>
        public static string invalid_code_point_name {
            get {
                return ResourceManager.GetString("invalid_code_point_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command line argument &apos;/{0}&apos;: {1}.
        /// </summary>
        public static string invalid_command_line_argument {
            get {
                return ResourceManager.GetString("invalid_command_line_argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command line argument(s): {0}.
        /// </summary>
        public static string invalid_command_line_argument_noname {
            get {
                return ResourceManager.GetString("invalid_command_line_argument_noname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Field implementing PHP constant should be public literal..
        /// </summary>
        public static string invalid_constant_field {
            get {
                return ResourceManager.GetString("invalid_constant_field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Invalid constant name &apos;{2}&apos;..
        /// </summary>
        public static string invalid_constant_name {
            get {
                return ResourceManager.GetString("invalid_constant_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Invalid constant type ({2})..
        /// </summary>
        public static string invalid_constant_type {
            get {
                return ResourceManager.GetString("invalid_constant_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid format of dynamic wrapper &apos;{0}&apos;..
        /// </summary>
        public static string invalid_dynamic_wrapper_format {
            get {
                return ResourceManager.GetString("invalid_dynamic_wrapper_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Escape sequence &apos;{0}&apos; requires exactly {1} hexadecimal digits.
        /// </summary>
        public static string invalid_escape_sequence_length {
            get {
                return ResourceManager.GetString("invalid_escape_sequence_length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exceptions must be valid objects derived from the Exception base class.
        /// </summary>
        public static string invalid_exception_object {
            get {
                return ResourceManager.GetString("invalid_exception_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file extension &apos;{0}&apos;..
        /// </summary>
        public static string invalid_file_extension {
            get {
                return ResourceManager.GetString("invalid_file_extension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied file access mode ({0}) is not valid.
        /// </summary>
        public static string invalid_file_mode {
            get {
                return ResourceManager.GetString("invalid_file_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create filter ({0}).
        /// </summary>
        public static string invalid_filter_name {
            get {
                return ResourceManager.GetString("invalid_filter_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid argument supplied for foreach statement.
        /// </summary>
        public static string invalid_foreach_argument {
            get {
                return ResourceManager.GetString("invalid_foreach_argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function name must be a string.
        /// </summary>
        public static string invalid_function_name {
            get {
                return ResourceManager.GetString("invalid_function_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header &apos;{0}&apos; is invalid: {1}.
        /// </summary>
        public static string invalid_header {
            get {
                return ResourceManager.GetString("invalid_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The icon has an invalid format..
        /// </summary>
        public static string invalid_icon_format {
            get {
                return ResourceManager.GetString("invalid_icon_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid identifier; an identifier cannot be non-empty and cannot contain any of the characters &apos;&lt;&apos;, &apos;&gt;&apos; and &apos;#&apos;..
        /// </summary>
        public static string invalid_identifier {
            get {
                return ResourceManager.GetString("invalid_identifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert {0} to {1} implicitly in a call to function {2}().
        /// </summary>
        public static string invalid_implicit_cast {
            get {
                return ResourceManager.GetString("invalid_implicit_cast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modifier cannot be applied on the interface.
        /// </summary>
        public static string invalid_interface_modifier {
            get {
                return ResourceManager.GetString("invalid_interface_modifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid library contant type &apos;{0}&apos;..
        /// </summary>
        public static string invalid_library_contant_type {
            get {
                return ResourceManager.GetString("invalid_library_contant_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line pragma has an invalid value.
        /// </summary>
        public static string invalid_line_pragma {
            get {
                return ResourceManager.GetString("invalid_line_pragma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid implementation of method &apos;{0}&apos;..
        /// </summary>
        public static string invalid_method_implementation {
            get {
                return ResourceManager.GetString("invalid_method_implementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Method implementing PHP function should be public and static..
        /// </summary>
        public static string invalid_method_modifiers {
            get {
                return ResourceManager.GetString("invalid_method_modifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method name must be a string.
        /// </summary>
        public static string invalid_method_name {
            get {
                return ResourceManager.GetString("invalid_method_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid node..
        /// </summary>
        public static string invalid_node {
            get {
                return ResourceManager.GetString("invalid_node", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node cannot be used in configuration file located on virtual path &apos;{0}&apos; because {1}..
        /// </summary>
        public static string invalid_node_location {
            get {
                return ResourceManager.GetString("invalid_node_location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option &apos;{0}&apos;..
        /// </summary>
        public static string invalid_option {
            get {
                return ResourceManager.GetString("invalid_option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Invalid parameter &apos;{2}&apos; type ({3})..
        /// </summary>
        public static string invalid_parameter_type {
            get {
                return ResourceManager.GetString("invalid_parameter_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path is not valid..
        /// </summary>
        public static string invalid_path {
            get {
                return ResourceManager.GetString("invalid_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid query source.
        /// </summary>
        public static string invalid_query_source {
            get {
                return ResourceManager.GetString("invalid_query_source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid global variables registering order..
        /// </summary>
        public static string invalid_registering_order {
            get {
                return ResourceManager.GetString("invalid_registering_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid regular expression..
        /// </summary>
        public static string invalid_regular_expression {
            get {
                return ResourceManager.GetString("invalid_regular_expression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid resource visibility. Must be private or public.
        /// </summary>
        public static string invalid_resource_visibility {
            get {
                return ResourceManager.GetString("invalid_resource_visibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Invalid return type ({2})..
        /// </summary>
        public static string invalid_return_type {
            get {
                return ResourceManager.GetString("invalid_return_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied resource is not a valid &apos;stream&apos; resource.
        /// </summary>
        public static string invalid_socket_resource {
            get {
                return ResourceManager.GetString("invalid_socket_resource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied resource is not a valid Socket Stream resource.
        /// </summary>
        public static string invalid_socket_stream_resource {
            get {
                return ResourceManager.GetString("invalid_socket_stream_resource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid source file or directory: {0}.
        /// </summary>
        public static string invalid_source {
            get {
                return ResourceManager.GetString("invalid_source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied resource is not a valid Stream resource.
        /// </summary>
        public static string invalid_stream_resource {
            get {
                return ResourceManager.GetString("invalid_stream_resource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Type implementing PHP function or constant should be in namespace {1} or its subnamespace..
        /// </summary>
        public static string invalid_type_namespace {
            get {
                return ResourceManager.GetString("invalid_type_namespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Type implementing PHP function or constant should be public..
        /// </summary>
        public static string invalid_type_visibility {
            get {
                return ResourceManager.GetString("invalid_type_visibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value &apos;{0}&apos;..
        /// </summary>
        public static string invalid_value {
            get {
                return ResourceManager.GetString("invalid_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove item from empty array..
        /// </summary>
        public static string item_removed_from_empty_array {
            get {
                return ResourceManager.GetString("item_removed_from_empty_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key element cannot be a reference.
        /// </summary>
        public static string key_alias {
            get {
                return ResourceManager.GetString("key_alias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label &apos;{0}&apos; is already declared.
        /// </summary>
        public static string label_redeclared {
            get {
                return ResourceManager.GetString("label_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last must be greater than or equal to the first..
        /// </summary>
        public static string last_is_less_than_first {
            get {
                return ResourceManager.GetString("last_is_less_than_first", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of items in {0} should be the same as in {1}.
        /// </summary>
        public static string lengths_are_different {
            get {
                return ResourceManager.GetString("lengths_are_different", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library assembly &apos;{0}&apos; could not be loaded..
        /// </summary>
        public static string library_assembly_loading_failed {
            get {
                return ResourceManager.GetString("library_assembly_loading_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare library class/interface {0}.
        /// </summary>
        public static string library_class_redeclared {
            get {
                return ResourceManager.GetString("library_class_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inclusion will issue a run-time error if executed as it redeclares library class/interface {0}.
        /// </summary>
        public static string library_class_redeclared_by_inclusion {
            get {
                return ResourceManager.GetString("library_class_redeclared_by_inclusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration handler of the library &apos;{0}&apos; has failed..
        /// </summary>
        public static string library_config_handler_failed {
            get {
                return ResourceManager.GetString("library_config_handler_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare library function &apos;{0}&apos;.
        /// </summary>
        public static string library_func_redeclared {
            get {
                return ResourceManager.GetString("library_func_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library &apos;{0}&apos; cannot be loaded; {1}.
        /// </summary>
        public static string library_load_failed {
            get {
                return ResourceManager.GetString("library_load_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library configuration section &apos;{0}&apos; has already been bound to the library &apos;{1}&apos;..
        /// </summary>
        public static string library_section_redeclared {
            get {
                return ResourceManager.GetString("library_section_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded libraries.
        /// </summary>
        public static string loaded_libraries {
            get {
                return ResourceManager.GetString("loaded_libraries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The magic method {0}() must have public visibility and cannot be static.
        /// </summary>
        public static string magic_method_must_be_public_nonstatic {
            get {
                return ResourceManager.GetString("magic_method_must_be_public_nonstatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot make non-static method {0}::{1}() static in class &apos;{2}&apos;.
        /// </summary>
        public static string make_nonstatic_method_static {
            get {
                return ResourceManager.GetString("make_nonstatic_method_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare non-static property {0}::${1} as static {2}::${1} (non-static declared in &apos;{3}&apos;).
        /// </summary>
        public static string make_nonstatic_property_static {
            get {
                return ResourceManager.GetString("make_nonstatic_property_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot make static method {0}::{1}() non-static in class &apos;{2}&apos;.
        /// </summary>
        public static string make_static_method_non_static {
            get {
                return ResourceManager.GetString("make_static_method_non_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare static property {0}::${1} as non static {2}::${1} (static declared in &apos;{3}&apos;).
        /// </summary>
        public static string make_static_property_nonstatic {
            get {
                return ResourceManager.GetString("make_static_property_nonstatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mandatory parameter &apos;{0}&apos; declared behind optional parameter.
        /// </summary>
        public static string mandatory_behind_optional_param {
            get {
                return ResourceManager.GetString("mandatory_behind_optional_param", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method declared in interface cannot have body.
        /// </summary>
        public static string method_body_in_interface {
            get {
                return ResourceManager.GetString("method_body_in_interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to a member function {0}() on a non-object.
        /// </summary>
        public static string method_called_on_non_object {
            get {
                return ResourceManager.GetString("method_called_on_non_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0}::{1}() cannot take arguments.
        /// </summary>
        public static string method_cannot_take_arguments {
            get {
                return ResourceManager.GetString("method_cannot_take_arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0}::{1}() must take exactly {2} arguments.
        /// </summary>
        public static string method_must_take_exact_args_count {
            get {
                return ResourceManager.GetString("method_must_take_exact_args_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration of {0}::{1}() must be compatible with that of {2}::{1}().
        /// </summary>
        public static string method_not_compatible {
            get {
                return ResourceManager.GetString("method_not_compatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare method {0}::{1}.
        /// </summary>
        public static string method_redeclared {
            get {
                return ResourceManager.GetString("method_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing argument #{0}.
        /// </summary>
        public static string missing_argument {
            get {
                return ResourceManager.GetString("missing_argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing argument #{0} for {1}().
        /// </summary>
        public static string missing_argument_for {
            get {
                return ResourceManager.GetString("missing_argument_for", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing attribute &apos;{0}&apos;..
        /// </summary>
        public static string missing_attribute {
            get {
                return ResourceManager.GetString("missing_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration option {0} has not been defined..
        /// </summary>
        public static string missing_configuration {
            get {
                return ResourceManager.GetString("missing_configuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing constructor - class &apos;{0}&apos; extends a CLR type without a default constructor and therefore must implement a constructor.
        /// </summary>
        public static string missing_ctor_in_clr_subclass {
            get {
                return ResourceManager.GetString("missing_ctor_in_clr_subclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing entry point; no static parameterless method or function &apos;{0}&apos; found.
        /// </summary>
        public static string missing_entry_point {
            get {
                return ResourceManager.GetString("missing_entry_point", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting kind of imported subject (specify one of &apos;namespace&apos;, &apos;class&apos;, &apos;interface&apos;, &apos;function&apos;, &apos;const&apos;).
        /// </summary>
        public static string missing_imported_entity {
            get {
                return ResourceManager.GetString("missing_imported_entity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing &apos;partial&apos; modifier on declaration of class/interface &apos;{0}&apos; - another partial declaration of this type exists.
        /// </summary>
        public static string missing_partial_modifier {
            get {
                return ResourceManager.GetString("missing_partial_modifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing generic type argument #{0}.
        /// </summary>
        public static string missing_type_argument {
            get {
                return ResourceManager.GetString("missing_type_argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing generic type argument #{0} for {1}().
        /// </summary>
        public static string missing_type_argument_for {
            get {
                return ResourceManager.GetString("missing_type_argument_for", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of type &apos;{0}&apos; requires generic type parameter #{1} (&apos;{2}&apos;) to be specified (no default type applicable).
        /// </summary>
        public static string missing_type_argument_in_type_use {
            get {
                return ResourceManager.GetString("missing_type_argument_in_type_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;case&apos; label with value {0} has already been declared.
        /// </summary>
        public static string more_switch_cases_with_same_value {
            get {
                return ResourceManager.GetString("more_switch_cases_with_same_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;switch&apos; already contains a &apos;default&apos; section.
        /// </summary>
        public static string more_then_one_default_in_switch {
            get {
                return ResourceManager.GetString("more_then_one_default_in_switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assertion contains multiple statements but only the first one is relevant.
        /// </summary>
        public static string multiple_statements_in_assertion {
            get {
                return ResourceManager.GetString("multiple_statements_in_assertion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple access type modifiers are not allowed.
        /// </summary>
        public static string multiple_visibility_modifiers {
            get {
                return ResourceManager.GetString("multiple_visibility_modifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must reflect an instance field of PhpReference type declared in the class assignable from the class associated with this table..
        /// </summary>
        public static string must_be_associated_instance_field {
            get {
                return ResourceManager.GetString("must_be_associated_instance_field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be bound to an instance method of the class associated with this table..
        /// </summary>
        public static string must_be_associated_instance_method {
            get {
                return ResourceManager.GetString("must_be_associated_instance_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be bound to a method of the class associated with this table..
        /// </summary>
        public static string must_be_associated_method {
            get {
                return ResourceManager.GetString("must_be_associated_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be bound to a static method of the class associated with this table..
        /// </summary>
        public static string must_be_associated_static_method {
            get {
                return ResourceManager.GetString("must_be_associated_static_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be an instance of DeclaringType..
        /// </summary>
        public static string must_be_declaringtype_instance {
            get {
                return ResourceManager.GetString("must_be_declaringtype_instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be an IPhpMemberHandle..
        /// </summary>
        public static string must_be_iphpmemberhandle {
            get {
                return ResourceManager.GetString("must_be_iphpmemberhandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a class derived from PhpObject..
        /// </summary>
        public static string must_be_phpobject_subclass {
            get {
                return ResourceManager.GetString("must_be_phpobject_subclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be static..
        /// </summary>
        public static string must_be_static {
            get {
                return ResourceManager.GetString("must_be_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must target an instance method..
        /// </summary>
        public static string must_target_instance_method {
            get {
                return ResourceManager.GetString("must_target_instance_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespace keyword used outside namespace declaration.
        /// </summary>
        public static string namespace_keyword_outside_namespace {
            get {
                return ResourceManager.GetString("namespace_keyword_outside_namespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NetworkUtils are not supported on this system..
        /// </summary>
        public static string networkutils_unsupported {
            get {
                return ResourceManager.GetString("networkutils_unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add element to the array as the next element is already occupied.
        /// </summary>
        public static string next_array_key_unavailable {
            get {
                return ResourceManager.GetString("next_array_key_unavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; has no constructor defined - using default constructor and ignoring arguments.
        /// </summary>
        public static string no_ctor_defined {
            get {
                return ResourceManager.GetString("no_ctor_defined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Called from the global scope - no function context.
        /// </summary>
        public static string no_function_context {
            get {
                return ResourceManager.GetString("no_function_context", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source files to compile..
        /// </summary>
        public static string no_source_files_to_compile {
            get {
                return ResourceManager.GetString("no_source_files_to_compile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No accessible overload of function &apos;{1}&apos; is compatible with the specified arguments.
        /// </summary>
        public static string no_suitable_function_overload {
            get {
                return ResourceManager.GetString("no_suitable_function_overload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No accessible overload of method &apos;{0}::{1}&apos; is compatible with the specified arguments.
        /// </summary>
        public static string no_suitable_method_overload {
            get {
                return ResourceManager.GetString("no_suitable_method_overload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot extend &apos;{0}&apos; because it is not a class.
        /// </summary>
        public static string non_class_extended {
            get {
                return ResourceManager.GetString("non_class_extended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; cannot be used with generic type arguments.
        /// </summary>
        public static string non_generic_type_used_with_type_arguments {
            get {
                return ResourceManager.GetString("non_generic_type_used_with_type_arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot extend &apos;{0}&apos; because it is not an interface.
        /// </summary>
        public static string non_interface_extended {
            get {
                return ResourceManager.GetString("non_interface_extended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot implement &apos;{0}&apos; because it is not an interface.
        /// </summary>
        public static string non_interface_implemented {
            get {
                return ResourceManager.GetString("non_interface_implemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-abstract method {0}::{1}() must contain body.
        /// </summary>
        public static string nonabstract_bodyless_method {
            get {
                return ResourceManager.GetString("nonabstract_bodyless_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot make non-abstract method {0}::{1}() abstract in class &apos;{2}&apos;.
        /// </summary>
        public static string nonabstract_method_overridden_with_abstract {
            get {
                return ResourceManager.GetString("nonabstract_method_overridden_with_abstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A callback &apos;{0}&apos; specified in the argument &apos;{1}&apos; is not callable.
        /// </summary>
        public static string noncallable_callback {
            get {
                return ResourceManager.GetString("noncallable_callback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-static method {0}::{1}() should not be called statically.
        /// </summary>
        public static string nonstatic_method_called_statically {
            get {
                return ResourceManager.GetString("nonstatic_method_called_statically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only variables can be passed by reference.
        /// </summary>
        public static string nonvar_passed_by_ref {
            get {
                return ResourceManager.GetString("nonvar_passed_by_ref", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all populated constants have been reflected..
        /// </summary>
        public static string not_all_constants_reflected {
            get {
                return ResourceManager.GetString("not_all_constants_reflected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all populated fields have been reflected..
        /// </summary>
        public static string not_all_fields_reflected {
            get {
                return ResourceManager.GetString("not_all_fields_reflected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all populated methods have been reflected..
        /// </summary>
        public static string not_all_methods_reflected {
            get {
                return ResourceManager.GetString("not_all_methods_reflected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a custom attribute class.
        /// </summary>
        public static string not_custom_attribute_class {
            get {
                return ResourceManager.GetString("not_custom_attribute_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enought space in the target array..
        /// </summary>
        public static string not_enought_space_in_target_array {
            get {
                return ResourceManager.GetString("not_enought_space_in_target_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function &apos;{0}&apos; is not supported.
        /// </summary>
        public static string notsupported_function_called {
            get {
                return ResourceManager.GetString("notsupported_function_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting constant value within heredoc..
        /// </summary>
        public static string nowdoc_expected {
            get {
                return ResourceManager.GetString("nowdoc_expected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object of class {0} could not be converted to {1}.
        /// </summary>
        public static string object_could_not_be_converted {
            get {
                return ResourceManager.GetString("object_could_not_be_converted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use object of type {0} as array.
        /// </summary>
        public static string object_used_as_array {
            get {
                return ResourceManager.GetString("object_used_as_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method offsetGet() of objects used with [] operator followed by increment, decrement, assignment to reference, or another [] operators must return by reference.
        /// </summary>
        public static string offsetGet_must_return_byref {
            get {
                return ResourceManager.GetString("offsetGet_must_return_byref", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only variables should be assigned by reference.
        /// </summary>
        public static string only_vars_assigned_by_ref {
            get {
                return ResourceManager.GetString("only_vars_assigned_by_ref", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AllowedPathPrefixes restriction in effect. File({0}) is not within the allowed path(s): ({1}).
        /// </summary>
        public static string open_basedir_effect {
            get {
                return ResourceManager.GetString("open_basedir_effect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use [] for reading.
        /// </summary>
        public static string operator_array_access_used_for_reading {
            get {
                return ResourceManager.GetString("operator_array_access_used_for_reading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to option.
        /// </summary>
        public static string option {
            get {
                return ResourceManager.GetString("option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;Out&apos; can be used only on parameters passed by reference; add &apos;&amp;&apos; modifier to the parameter &apos;${0}&apos;.
        /// </summary>
        public static string out_attribute_on_byval_param {
            get {
                return ResourceManager.GetString("out_attribute_on_byval_param", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value should be between {0} and {1} including..
        /// </summary>
        public static string out_of_range {
            get {
                return ResourceManager.GetString("out_of_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output buffering is disabled.
        /// </summary>
        public static string output_buffering_disabled {
            get {
                return ResourceManager.GetString("output_buffering_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: This overload of &apos;{2}&apos; has different implementation options than the others..
        /// </summary>
        public static string overload_has_different_impl_options {
            get {
                return ResourceManager.GetString("overload_has_different_impl_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Overload has lesser mandatory parameter count than another one, even though it has optional arguments..
        /// </summary>
        public static string overload_has_lesser_param_count {
            get {
                return ResourceManager.GetString("overload_has_lesser_param_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}: Suboptimal implementation. Overloads of &apos;{2}&apos; are not placed one following the other in metadata table..
        /// </summary>
        public static string overloads_not_contiguous {
            get {
                return ResourceManager.GetString("overloads_not_contiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot override final method {0}::{1}().
        /// </summary>
        public static string override_final_method {
            get {
                return ResourceManager.GetString("override_final_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot override constant &apos;{0}&apos; defined in interface &apos;{1}&apos;.
        /// </summary>
        public static string overriding_interface_constant {
            get {
                return ResourceManager.GetString("overriding_interface_constant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}::{1}() must be at least as visible as &apos;{2}&apos; specified in class/interface &apos;{3}&apos;.
        /// </summary>
        public static string overriding_method_restrict_visibility {
            get {
                return ResourceManager.GetString("overriding_method_restrict_visibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}::${1} must be at least as visible as &apos;{2}&apos; specified in class/interface &apos;{3}&apos;.
        /// </summary>
        public static string overriding_property_restrict_visibility {
            get {
                return ResourceManager.GetString("overriding_property_restrict_visibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change initial value of property static protected {0}::${1} in class &apos;{2}&apos; (previously declared in {3}).
        /// </summary>
        public static string overriding_protected_static_with_init_value {
            get {
                return ResourceManager.GetString("overriding_protected_static_with_init_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare property static &apos;{3}&apos; {0}::${1} in class &apos;{2}&apos; (previously declared in &apos;{4}&apos;).
        /// </summary>
        public static string overriding_static_field_with_static {
            get {
                return ResourceManager.GetString("overriding_static_field_with_static", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to instantiate page &apos;{0}&apos;..
        /// </summary>
        public static string page_instantiation_failed {
            get {
                return ResourceManager.GetString("page_instantiation_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; must be passed by reference.
        /// </summary>
        public static string parameter_must_be_byref {
            get {
                return ResourceManager.GetString("parameter_must_be_byref", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access parent:: when current class scope has no parent.
        /// </summary>
        public static string parent_accessed_in_parentless_class {
            get {
                return ResourceManager.GetString("parent_accessed_in_parentless_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access parent:: when no class scope is active.
        /// </summary>
        public static string parent_accessed_out_of_class {
            get {
                return ResourceManager.GetString("parent_accessed_out_of_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;parent&apos; used out of class declaration.
        /// </summary>
        public static string parent_used_out_of_class {
            get {
                return ResourceManager.GetString("parent_used_out_of_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;partial&apos; modifier cannot be used on a conditional declaration.
        /// </summary>
        public static string partial_conditional_declaration {
            get {
                return ResourceManager.GetString("partial_conditional_declaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All partial declarations of &apos;{0}&apos; must not specify different base classes.
        /// </summary>
        public static string partial_declarations_differ_in_base {
            get {
                return ResourceManager.GetString("partial_declarations_differ_in_base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All partial declarations of &apos;{0}&apos; must have the same type parameter definitions.
        /// </summary>
        public static string partial_declarations_differ_in_type_parameter {
            get {
                return ResourceManager.GetString("partial_declarations_differ_in_type_parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All partial declarations of &apos;{0}&apos; must have the same number of type parameters.
        /// </summary>
        public static string partial_declarations_differ_in_type_parameter_count {
            get {
                return ResourceManager.GetString("partial_declarations_differ_in_type_parameter_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;partial&apos; modifier can be used only in pure unit.
        /// </summary>
        public static string partial_impure_declaration {
            get {
                return ResourceManager.GetString("partial_impure_declaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;partial&apos; modifier cannot be used in an evaluated code.
        /// </summary>
        public static string partial_transient_declaration {
            get {
                return ResourceManager.GetString("partial_transient_declaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path argument can not be empty.
        /// </summary>
        public static string path_argument_empty {
            get {
                return ResourceManager.GetString("path_argument_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path contains invalid characters.
        /// </summary>
        public static string path_contains_invalid_characters {
            get {
                return ResourceManager.GetString("path_contains_invalid_characters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performing compilation.
        /// </summary>
        public static string performing_compilation {
            get {
                return ResourceManager.GetString("performing_compilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?php_track_vars?&gt; is not supported.
        /// </summary>
        public static string php_track_vars_not_supported {
            get {
                return ResourceManager.GetString("php_track_vars_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precompiled assembly &apos;{0}&apos; is corrupted (unable to resolve type token 0x{1:X8})..
        /// </summary>
        public static string precompiled_assembly_corrupted {
            get {
                return ResourceManager.GetString("precompiled_assembly_corrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precompiled assembly &apos;{0}&apos; contains &lt;Script&gt; type that misses ScriptAttribute..
        /// </summary>
        public static string precompiled_assembly_missing_script_attribute {
            get {
                return ResourceManager.GetString("precompiled_assembly_missing_script_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot declare a private class in the global namespace.
        /// </summary>
        public static string private_class_in_global_ns {
            get {
                return ResourceManager.GetString("private_class_in_global_ns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access private constant {0}::{1} from context &apos;{2}&apos;.
        /// </summary>
        public static string private_constant_accessed {
            get {
                return ResourceManager.GetString("private_constant_accessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to private constructor {0}::{1}() from context &apos;{2}&apos;.
        /// </summary>
        public static string private_ctor_called {
            get {
                return ResourceManager.GetString("private_ctor_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to private method {0}::{1}() from context &apos;{2}&apos;.
        /// </summary>
        public static string private_method_called {
            get {
                return ResourceManager.GetString("private_method_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access private property {0}::${1} from context &apos;{2}&apos;.
        /// </summary>
        public static string private_property_accessed {
            get {
                return ResourceManager.GetString("private_property_accessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties cannot be declared abstract.
        /// </summary>
        public static string property_declared_abstract {
            get {
                return ResourceManager.GetString("property_declared_abstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties cannot be declared final.
        /// </summary>
        public static string property_declared_final {
            get {
                return ResourceManager.GetString("property_declared_final", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare property {0}::${1}.
        /// </summary>
        public static string property_redeclared {
            get {
                return ResourceManager.GetString("property_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to assign the specified value to &apos;{0}::{1}&apos;. There is no suitable conversion..
        /// </summary>
        public static string property_type_mismatch {
            get {
                return ResourceManager.GetString("property_type_mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access protected constant {0}::{1} from context &apos;{2}&apos;.
        /// </summary>
        public static string protected_constant_accessed {
            get {
                return ResourceManager.GetString("protected_constant_accessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to protected constructor {0}::{1}() from context &apos;{2}&apos;.
        /// </summary>
        public static string protected_ctor_called {
            get {
                return ResourceManager.GetString("protected_ctor_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to protected method {0}::{1}() from context &apos;{2}&apos;.
        /// </summary>
        public static string protected_method_called {
            get {
                return ResourceManager.GetString("protected_method_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access protected property {0}::${1} from context &apos;{2}&apos;.
        /// </summary>
        public static string protected_property_accessed {
            get {
                return ResourceManager.GetString("protected_property_accessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading configuration.
        /// </summary>
        public static string reading_configuration {
            get {
                return ResourceManager.GetString("reading_configuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set read-only property {0}::${1}.
        /// </summary>
        public static string readonly_property_written {
            get {
                return ResourceManager.GetString("readonly_property_written", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare {0} &apos;{1}&apos; previously declared in {2}{3}.
        /// </summary>
        public static string redeclared_previous_decl {
            get {
                return ResourceManager.GetString("redeclared_previous_decl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inclusion of &apos;{2}{3}&apos; redeclares {0} &apos;{1}&apos; declared in {2}{3}.
        /// </summary>
        public static string redeclared_previous_decl_include {
            get {
                return ResourceManager.GetString("redeclared_previous_decl_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot declare inherited constant &apos;{0}&apos; from interface &apos;{1}&apos; in class/interface &apos;{2}&apos;.
        /// </summary>
        public static string redeclaring_inherited_constant {
            get {
                return ResourceManager.GetString("redeclaring_inherited_constant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; is passed by reference and hence should not be NULL.
        /// </summary>
        public static string reference_null {
            get {
                return ResourceManager.GetString("reference_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A scalar of type &apos;{0}&apos; used as an array.
        /// </summary>
        public static string scalar_used_as_array {
            get {
                return ResourceManager.GetString("scalar_used_as_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A scalar of type &apos;{0}&apos; used as an object.
        /// </summary>
        public static string scalar_used_as_object {
            get {
                return ResourceManager.GetString("scalar_used_as_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script &apos;{0}&apos; inclusion failed. Cause: {1} Search paths: include_path is &apos;{2}&apos;, working directory is &apos;{3}&apos; .
        /// </summary>
        public static string script_inclusion_failed {
            get {
                return ResourceManager.GetString("script_inclusion_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script library &quot;{0}&quot; could not be loaded..
        /// </summary>
        public static string script_library_assembly_loading_failed {
            get {
                return ResourceManager.GetString("script_library_assembly_loading_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script file &apos;{0}&apos; not found..
        /// </summary>
        public static string script_not_found {
            get {
                return ResourceManager.GetString("script_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access self:: when no class scope is active.
        /// </summary>
        public static string self_accessed_out_of_class {
            get {
                return ResourceManager.GetString("self_accessed_out_of_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;self&apos; used out of class declaration.
        /// </summary>
        public static string self_used_out_of_class {
            get {
                return ResourceManager.GetString("self_used_out_of_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semicolon ignored, using it in this context is possible in PHP 5, but depracated in PHP.NET.
        /// </summary>
        public static string semicolon_ignored {
            get {
                return ResourceManager.GetString("semicolon_ignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}::serialize() must return a string or NULL.
        /// </summary>
        public static string serialize_must_return_null_or_string {
            get {
                return ResourceManager.GetString("serialize_must_return_null_or_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session state not available, session operation cannot be performed.
        /// </summary>
        public static string session_state_unavailable {
            get {
                return ResourceManager.GetString("session_state_unavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compilation of {0} skipped, file is already compiled.
        /// </summary>
        public static string skip_compile {
            get {
                return ResourceManager.GetString("skip_compile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __sleep should return an array containing the names of instance-variables to serialize.
        /// </summary>
        public static string sleep_must_return_array {
            get {
                return ResourceManager.GetString("sleep_must_return_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; returned as member variable from __sleep() but does not exist.
        /// </summary>
        public static string sleep_returned_bad_field {
            get {
                return ResourceManager.GetString("sleep_returned_bad_field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file &apos;{0}&apos; not found..
        /// </summary>
        public static string source_file_not_found {
            get {
                return ResourceManager.GetString("source_file_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessing the key of an EmptyIterator.
        /// </summary>
        public static string spl_empty_iterator_key_access {
            get {
                return ResourceManager.GetString("spl_empty_iterator_key_access", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessing the value of an EmptyIterator.
        /// </summary>
        public static string spl_empty_iterator_value_access {
            get {
                return ResourceManager.GetString("spl_empty_iterator_value_access", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index invalid or out of range.
        /// </summary>
        public static string spl_index_invalid {
            get {
                return ResourceManager.GetString("spl_index_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessing static property {0}::${1} as non static.
        /// </summary>
        public static string static_property_as_nonstatic {
            get {
                return ResourceManager.GetString("static_property_as_nonstatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to unset static property {0}::${1}.
        /// </summary>
        public static string static_property_unset {
            get {
                return ResourceManager.GetString("static_property_unset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access static:: when no class scope is active.
        /// </summary>
        public static string static_used_out_of_class {
            get {
                return ResourceManager.GetString("static_used_out_of_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open stream ({0}): The specified directory does not exist.
        /// </summary>
        public static string stream_bad_directory {
            get {
                return ResourceManager.GetString("stream_bad_directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open stream ({0}): The specified file does not exist.
        /// </summary>
        public static string stream_bad_filename {
            get {
                return ResourceManager.GetString("stream_bad_filename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the wrapper &apos;{0}&apos; - did you forget to enable it when you configured PHP?.
        /// </summary>
        public static string stream_bad_wrapper {
            get {
                return ResourceManager.GetString("stream_bad_wrapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to make directory ({0}): Permission denied.
        /// </summary>
        public static string stream_directory_access_denied {
            get {
                return ResourceManager.GetString("stream_directory_access_denied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to make directory ({0}): Directory not empty or read-only.
        /// </summary>
        public static string stream_directory_error {
            get {
                return ResourceManager.GetString("stream_directory_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to make directory ({0}): Use recursive mode to create more than one directory at a time.
        /// </summary>
        public static string stream_directory_make_parent {
            get {
                return ResourceManager.GetString("stream_directory_make_parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to make directory ({0}): Can not create root directory.
        /// </summary>
        public static string stream_directory_make_root {
            get {
                return ResourceManager.GetString("stream_directory_make_root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory does not exist ({0}).
        /// </summary>
        public static string stream_directory_not_exists {
            get {
                return ResourceManager.GetString("stream_directory_not_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not access resource ({0}): {1}.
        /// </summary>
        public static string stream_error {
            get {
                return ResourceManager.GetString("stream_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access ({0}): Permission denied.
        /// </summary>
        public static string stream_file_access_denied {
            get {
                return ResourceManager.GetString("stream_file_access_denied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file already exists ({0}).
        /// </summary>
        public static string stream_file_exists {
            get {
                return ResourceManager.GetString("stream_file_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open stream ({0}): The specified filename is invalid.
        /// </summary>
        public static string stream_file_invalid {
            get {
                return ResourceManager.GetString("stream_file_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open stream ({0}) due to I/O error: {1}.
        /// </summary>
        public static string stream_file_io_error {
            get {
                return ResourceManager.GetString("stream_file_io_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file does not exist ({0}).
        /// </summary>
        public static string stream_file_not_exists {
            get {
                return ResourceManager.GetString("stream_file_not_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access ({0}): The filename is invalid.
        /// </summary>
        public static string stream_filename_invalid {
            get {
                return ResourceManager.GetString("stream_filename_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open {0} for reading.
        /// </summary>
        public static string stream_open_read_unsupported {
            get {
                return ResourceManager.GetString("stream_open_read_unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open {0} for writing.
        /// </summary>
        public static string stream_open_write_unsupported {
            get {
                return ResourceManager.GetString("stream_open_write_unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path does not exist ({0}).
        /// </summary>
        public static string stream_path_not_exists {
            get {
                return ResourceManager.GetString("stream_path_not_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured when reading from stream: {0}.
        /// </summary>
        public static string stream_read_error {
            get {
                return ResourceManager.GetString("stream_read_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An I/O error occured when reading from stream: {0}.
        /// </summary>
        public static string stream_read_io_error {
            get {
                return ResourceManager.GetString("stream_read_io_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream was not opened for reading.
        /// </summary>
        public static string stream_read_off {
            get {
                return ResourceManager.GetString("stream_read_off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not rename &apos;{0}&apos; to &apos;{1}&apos;: target file exists.
        /// </summary>
        public static string stream_rename_file_exists {
            get {
                return ResourceManager.GetString("stream_rename_file_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not remove directory ({0}): directory not empty.
        /// </summary>
        public static string stream_rmdir_io_error {
            get {
                return ResourceManager.GetString("stream_rmdir_io_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seeking in a {0} stream! It may lead to unpredictable results..
        /// </summary>
        public static string stream_seek_filtered {
            get {
                return ResourceManager.GetString("stream_seek_filtered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Socket error: {0}.
        /// </summary>
        public static string stream_socket_error {
            get {
                return ResourceManager.GetString("stream_socket_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to stat ({0}) - invalid filename.
        /// </summary>
        public static string stream_stat_invalid_path {
            get {
                return ResourceManager.GetString("stream_stat_invalid_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not unlink file ({0}): unexpected error.
        /// </summary>
        public static string stream_unlink_error {
            get {
                return ResourceManager.GetString("stream_unlink_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not unlink file ({0}): The specified filename is invalid.
        /// </summary>
        public static string stream_unlink_file_not_found {
            get {
                return ResourceManager.GetString("stream_unlink_file_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not unlink file ({0}) due to I/O error: {1}.
        /// </summary>
        public static string stream_unlink_io_error {
            get {
                return ResourceManager.GetString("stream_unlink_io_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open stream ({0}): The specified URL is invalid.
        /// </summary>
        public static string stream_url_invalid {
            get {
                return ResourceManager.GetString("stream_url_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open stream ({0}): The specified request method is invalid.
        /// </summary>
        public static string stream_url_method_invalid {
            get {
                return ResourceManager.GetString("stream_url_method_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured when writing to stream: {0}.
        /// </summary>
        public static string stream_write_error {
            get {
                return ResourceManager.GetString("stream_write_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to write to stream (only {0} bytes of {1} written).
        /// </summary>
        public static string stream_write_failed {
            get {
                return ResourceManager.GetString("stream_write_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An I/O error occured when writing to stream: {0}.
        /// </summary>
        public static string stream_write_io_error {
            get {
                return ResourceManager.GetString("stream_write_io_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream was not opened for writing.
        /// </summary>
        public static string stream_write_off {
            get {
                return ResourceManager.GetString("stream_write_off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string item used as a reference.
        /// </summary>
        public static string string_item_used_as_reference {
            get {
                return ResourceManager.GetString("string_item_used_as_reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String should consist of a single character.
        /// </summary>
        public static string string_should_be_single_character {
            get {
                return ResourceManager.GetString("string_should_be_single_character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string used as an array.
        /// </summary>
        public static string string_used_as_array {
            get {
                return ResourceManager.GetString("string_used_as_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string used as an object.
        /// </summary>
        public static string string_used_as_object {
            get {
                return ResourceManager.GetString("string_used_as_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax error: {0}.
        /// </summary>
        public static string syntax_error {
            get {
                return ResourceManager.GetString("syntax_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable $this used in write context.
        /// </summary>
        public static string this_in_write_context {
            get {
                return ResourceManager.GetString("this_in_write_context", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable $this used out of method.
        /// </summary>
        public static string this_out_of_method {
            get {
                return ResourceManager.GetString("this_out_of_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using $this when not in object context.
        /// </summary>
        public static string this_used_out_of_object {
            get {
                return ResourceManager.GetString("this_used_out_of_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The integer number {0} is too big, converting to double instead.
        /// </summary>
        public static string too_big_int_conversion {
            get {
                return ResourceManager.GetString("too_big_int_conversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too few arguments to function {0}(), {1} passed and at least {2} expected.
        /// </summary>
        public static string too_few_arguments {
            get {
                return ResourceManager.GetString("too_few_arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing parameter(s) to the call of the class &apos;{0}&apos; constructor - at least {1} required but only {2} provided.
        /// </summary>
        public static string too_few_ctor_params {
            get {
                return ResourceManager.GetString("too_few_ctor_params", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing parameter(s) to the call of &apos;{0}&apos; - at least {1} required but only {2} provided.
        /// </summary>
        public static string too_few_function_params {
            get {
                return ResourceManager.GetString("too_few_function_params", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing parameter(s) to the call of &apos;{0}::{1}&apos; - at least {2} required but only {3} provided.
        /// </summary>
        public static string too_few_method_params {
            get {
                return ResourceManager.GetString("too_few_method_params", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too little data buffered..
        /// </summary>
        public static string too_little_data_buffered {
            get {
                return ResourceManager.GetString("too_little_data_buffered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function &apos;{0}&apos; declares too many local variables ({1}) which may lead to suboptimal performace.
        /// </summary>
        public static string too_many_local_variables_function {
            get {
                return ResourceManager.GetString("too_many_local_variables_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}::{1}&apos; declares too many local variables ({2}) which may lead to suboptimal performace.
        /// </summary>
        public static string too_many_local_variables_method {
            get {
                return ResourceManager.GetString("too_many_local_variables_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of type &apos;{0}&apos; requires at most {1} generic type arguments.
        /// </summary>
        public static string too_many_type_arguments_in_type_use {
            get {
                return ResourceManager.GetString("too_many_type_arguments_in_type_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0}::__toString() must return a string value.
        /// </summary>
        public static string tostring_must_return_string {
            get {
                return ResourceManager.GetString("tostring_must_return_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot instantiate trait {0}.
        /// </summary>
        public static string trait_instantiated {
            get {
                return ResourceManager.GetString("trait_instantiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use try without catch or finally.
        /// </summary>
        public static string try_without_catch_or_finally {
            get {
                return ResourceManager.GetString("try_without_catch_or_finally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic type argument #{0} not passed to the function/method.
        /// </summary>
        public static string type_argument_not_passed_to_function {
            get {
                return ResourceManager.GetString("type_argument_not_passed_to_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redeclare class/interface &apos;{0}&apos;.
        /// </summary>
        public static string type_redeclared {
            get {
                return ResourceManager.GetString("type_redeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find extension &apos;{0}&apos;.
        /// </summary>
        public static string unable_to_find_extension {
            get {
                return ResourceManager.GetString("unable_to_find_extension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to launch ExtManager..
        /// </summary>
        public static string unable_to_launch_extmanager {
            get {
                return ResourceManager.GetString("unable_to_launch_extmanager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve script type (source path &apos;{0}&apos;, referential type &apos;{1}&apos;).
        /// </summary>
        public static string unable_to_resolve_script_type {
            get {
                return ResourceManager.GetString("unable_to_resolve_script_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncaught {0}.
        /// </summary>
        public static string uncaught_exception {
            get {
                return ResourceManager.GetString("uncaught_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to clone an uncloneable object of class {0}.
        /// </summary>
        public static string uncloneable_cloned {
            get {
                return ResourceManager.GetString("uncloneable_cloned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to undeclared static property: {0}::${1}.
        /// </summary>
        public static string undeclared_static_property_accessed {
            get {
                return ResourceManager.GetString("undeclared_static_property_accessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined class constant &apos;{0}::{1}&apos;.
        /// </summary>
        public static string undefined_class_constant {
            get {
                return ResourceManager.GetString("undefined_class_constant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of undefined constant {0} - assumed &apos;{0}&apos;.
        /// </summary>
        public static string undefined_constant {
            get {
                return ResourceManager.GetString("undefined_constant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to undefined external function &apos;{0}&apos;, extension &apos;{1}&apos; - check configuration.
        /// </summary>
        public static string undefined_external_function_called {
            get {
                return ResourceManager.GetString("undefined_external_function_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to undefined external function &apos;{0}&apos;, extension &apos;{1}&apos; (extension not found).
        /// </summary>
        public static string undefined_external_module_called {
            get {
                return ResourceManager.GetString("undefined_external_module_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to undefined function {0}().
        /// </summary>
        public static string undefined_function_called {
            get {
                return ResourceManager.GetString("undefined_function_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of undefined label &apos;{0}&apos;.
        /// </summary>
        public static string undefined_label {
            get {
                return ResourceManager.GetString("undefined_label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to undefined method {0}::{1}().
        /// </summary>
        public static string undefined_method_called {
            get {
                return ResourceManager.GetString("undefined_method_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined offset ({0}).
        /// </summary>
        public static string undefined_offset {
            get {
                return ResourceManager.GetString("undefined_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined property: {0}::${1}.
        /// </summary>
        public static string undefined_property_accessed {
            get {
                return ResourceManager.GetString("undefined_property_accessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access undefined property for object with overloaded property access.
        /// </summary>
        public static string undefined_property_when_access_overloaded {
            get {
                return ResourceManager.GetString("undefined_property_when_access_overloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined variable: {0}.
        /// </summary>
        public static string undefined_variable {
            get {
                return ResourceManager.GetString("undefined_variable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected parent constructor call (such call is allowed only in the constructor of the class extending a CLR type).
        /// </summary>
        public static string unexpected_parent_ctor_invocation {
            get {
                return ResourceManager.GetString("unexpected_parent_ctor_invocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unexpected token &apos;{0}&apos;.
        /// </summary>
        public static string unexpected_token {
            get {
                return ResourceManager.GetString("unexpected_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String offset &apos;{0}&apos; hasn&apos;t been initialized.
        /// </summary>
        public static string uninitialized_string_offset {
            get {
                return ResourceManager.GetString("uninitialized_string_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; is unknown at this point at compile-time.
        /// </summary>
        public static string unknown_class_used {
            get {
                return ResourceManager.GetString("unknown_class_used", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; (imported as &apos;{1}&apos;) is unknown at this point at compile-time.
        /// </summary>
        public static string unknown_class_used_with_alias {
            get {
                return ResourceManager.GetString("unknown_class_used_with_alias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant &apos;{0}&apos; is unknown at this point at compile-time.
        /// </summary>
        public static string unknown_constant_used {
            get {
                return ResourceManager.GetString("unknown_constant_used", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant &apos;{0}&apos; (imported as &apos;{1}&apos;) is unknown at this point at compile-time.
        /// </summary>
        public static string unknown_constant_used_with_alias {
            get {
                return ResourceManager.GetString("unknown_constant_used_with_alias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown custom attribute; neither of types &apos;{0}&apos; and &apos;{1}&apos; exists.
        /// </summary>
        public static string unknown_custom_attribute {
            get {
                return ResourceManager.GetString("unknown_custom_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function &apos;{0}&apos; is unknown at this point at compile-time.
        /// </summary>
        public static string unknown_function_used {
            get {
                return ResourceManager.GetString("unknown_function_used", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function &apos;{0}&apos; (imported as &apos;{1}&apos;) is unknown at this point at compile-time.
        /// </summary>
        public static string unknown_function_used_with_alias {
            get {
                return ResourceManager.GetString("unknown_function_used_with_alias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; does not contain definition of method &apos;{1}&apos;.
        /// </summary>
        public static string unknown_method_called {
            get {
                return ResourceManager.GetString("unknown_method_called", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session handler &apos;{0}&apos; is unknown. It hasn&apos;t been registered by any loaded library..
        /// </summary>
        public static string unknown_session_handler {
            get {
                return ResourceManager.GetString("unknown_session_handler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error &quot;{0}&quot;..
        /// </summary>
        public static string UnknownError_Num {
            get {
                return ResourceManager.GetString("UnknownError_Num", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function {0} requires access to local variables and prevents optimizing them. To improve performance, separate this function call into small function..
        /// </summary>
        public static string unoptimized_local_variables_function {
            get {
                return ResourceManager.GetString("unoptimized_local_variables_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only arrays and Traversables can be unpacked. {0} given..
        /// </summary>
        public static string unpack_argument_error {
            get {
                return ResourceManager.GetString("unpack_argument_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unreachable code detected.
        /// </summary>
        public static string unreachable_code {
            get {
                return ResourceManager.GetString("unreachable_code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function {0}() hasn&apos;t defined the class it was called for.
        /// </summary>
        public static string unserialize_callback_failed {
            get {
                return ResourceManager.GetString("unserialize_callback_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported operand type.
        /// </summary>
        public static string unsupported_operand_type {
            get {
                return ResourceManager.GetString("unsupported_operand_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported operand types.
        /// </summary>
        public static string unsupported_operand_types {
            get {
                return ResourceManager.GetString("unsupported_operand_types", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unterminated comment starting line {0}.
        /// </summary>
        public static string unterminated_comment {
            get {
                return ResourceManager.GetString("unterminated_comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label &apos;{0}&apos; is defined but not used within the current scope.
        /// </summary>
        public static string unused_label {
            get {
                return ResourceManager.GetString("unused_label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL file-access is disabled in the server configuration.
        /// </summary>
        public static string url_fopen_disabled {
            get {
                return ResourceManager.GetString("url_fopen_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No URL resource specified.
        /// </summary>
        public static string url_resource_missing {
            get {
                return ResourceManager.GetString("url_resource_missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option is valid only in web application configuration..
        /// </summary>
        public static string web_only_option {
            get {
                return ResourceManager.GetString("web_only_option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web server context is not available..
        /// </summary>
        public static string web_server_not_available {
            get {
                return ResourceManager.GetString("web_server_not_available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} operation is not supported by this stream wrapper.
        /// </summary>
        public static string wrapper_op_unsupported {
            get {
                return ResourceManager.GetString("wrapper_op_unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read from write-only property {0}::${1}.
        /// </summary>
        public static string writeonly_property_read {
            get {
                return ResourceManager.GetString("writeonly_property_read", resourceCulture);
            }
        }
    }
}
